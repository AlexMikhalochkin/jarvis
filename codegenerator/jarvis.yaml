openapi: 3.0.3
info:
  title: Jarvis
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/amikhalachkin/test/1.0.0
  - url: https://petstore.swagger.io/v2
tags:
  - name: smartthings
    externalDocs:
      description: Documentation
      url: https://smartthings.developer.samsung.com/docs/devices/smartthings-schema/smartthings-schema-reference.html
  - name: yandex
    externalDocs:
      description: Documentation
      url: https://yandex.ru/dev/dialogs/smart-home/doc/reference/
paths:
  /yandex/v1.0:
    head:
      tags:
        - yandex
      summary: Health check
      operationId: health
      responses:
        200:
          description: OK
        500:
          description: Internal Server Error
  /yandex/v1.0/user/unlink:
    post:
      tags:
        - yandex
      summary: Unlink user's account
      operationId: unlink
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/requestId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnlinkResponse'
        500:
          description: Internal Server Error
  /yandex/v1.0/user/devices:
    get:
      tags:
        - yandex
      summary: Get all user's devices
      operationId: getDevices
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/requestId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesResponse'
        404:
          description: Not Found
  /yandex/v1.0/user/devices/query:
    post:
      tags:
        - yandex
      summary: Get information about the state of user devices.
      operationId: getDevicesStates
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        description: Get devices states request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatesRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesResponse2'
        404:
          description: Not Found
  /yandex/v1.0/user/devices/action:
    post:
      tags:
        - yandex
      summary: Changes the current state of user devices.
      operationId: changeDevicesStates
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        description: Change devices states request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeStatesRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatesResponse'
        404:
          description: Not Found

  /smartthings:
    post:
      tags:
        - smartthings
      summary: Handle SmartThings request
      operationId: handleSmartThings
      requestBody:
        description: Request from SmartThings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartThingsRequest'
            examples:
              Discovery:
                $ref: '#/components/examples/discoveryRequest'
              StateRefresh:
                $ref: '#/components/examples/stateRefreshRequest'
              Command:
                $ref: '#/components/examples/commandRequest'
        required: true
      responses:
        200:
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartThingsResponse'
components:
  schemas:
    UnlinkResponse:
      description: Unlink user response
      type: object
      properties:
        request_id:
          type: string
          example: 748b33ef-7eb4-4bae-8ead-5047ce34238f
      required:
        - request_id
    DevicesResponse:
      description: Response with all user's devices
      type: object
      allOf:
        - $ref: '#/components/schemas/UnlinkResponse'
      properties:
        payload:
          $ref: '#/components/schemas/Payload'
      required:
        - payload
    DevicesResponse2:
      description: Response with all user's devices
      type: object
      allOf:
        - $ref: '#/components/schemas/UnlinkResponse'
      properties:
        payload:
          $ref: '#/components/schemas/Payload2'
    Payload:
      description: Object with devices
      type: object
      properties:
        user_id:
          type: string
          example: a5b822de-2ebd-4fc0-802f-2869772583a8
        devices:
          type: array
          items:
            $ref: '#/components/schemas/YandexDevice'
      required:
        - user_id
        - devices
    Payload2:
      description: Object with devices
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/YandexDeviceWithCapabilities'
    YandexDevice:
      description: User's device
      type: object
      allOf:
        - $ref: '#/components/schemas/ShortYandexDevice'
      properties:
        name:
          type: string
          example: лампa
        description:
          type: string
          example: цветная лампa
        room:
          type: string
          example: спальня
        type:
          type: string
          example: devices.types.light
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/ShortCapability'
        device_info:
          $ref: '#/components/schemas/YandexDeviceInfo'
      required:
        - id
        - name
        - type
        - capabilities
        - device_info
    YandexDeviceWithCapabilities:
      description: User's device with its capabilities
      type: object
      properties:
        id:
          type: string
          example: abc-123
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/FullCapability'
    ShortCapability:
      description: Device's capability
      type: object
      properties:
        type:
          type: string
          example: devices.capabilities.on_off
    FullCapability:
      description: Device's capability
      type: object
      allOf:
        - $ref: '#/components/schemas/ShortCapability'
      properties:
        state:
          $ref: '#/components/schemas/YandexState'
      required:
        - type
        - state
    YandexDeviceInfo:
      description: Additional technical information about the device
      type: object
      properties:
        manufacturer:
          type: string
          example: Provider2
        model:
          type: string
          example: hue g11
        hw_version:
          type: string
          example: 1.2
        sw_version:
          type: string
          example: 5.4
      required:
        - manufacturer
        - model
    StatesRequest:
      description: Request to get states of devices
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/ShortYandexDevice'
    ShortYandexDevice:
      description: User's device
      type: object
      properties:
        id:
          type: string
          example: abc-123
        custom_data:
          additionalProperties:
            type: object
          example: {"foo": 1, "bar": "two"}
    YandexState:
      description: State of Yandex device
      type: object
      properties:
        instance:
          type: string
          example: "on"
        value:
          type: boolean
          example: true
      required:
        - instance
        - value
    ChangeStatesRequest:
      description: Request to change devices' states
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/ChangeStatesRequestPayload'
      required:
        - payload
    ChangeStatesRequestPayload:
      description: Object with devices
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/ChangeStateDevice'
      required:
        - devices
    ChangeStatesResponsePayload:
      description: Object with devices
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/ChangeStatesResponseDevice'
    ChangeStatesResponseDevice:
      description: Device's capability
      type: object
      properties:
        id:
          type: string
          example: abc-123
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/ChangeStatesResponseCapabity'
    ChangeStatesResponseCapabity:
      description: Device's capability
      type: object
      properties:
        type:
          type: string
          example: 'devices.capabilities.on_off'
        state:
          $ref: '#/components/schemas/ChangeStatesResponseState'
    ChangeStatesResponseState:
      description: Device's state
      type: object
      properties:
        instance:
          type: string
          example: 'on'
        action_result:
          $ref: '#/components/schemas/ActionResult'
    ActionResult:
      description: Result of change state action
      type: object
      properties:
        status:
          type: string
          example: DONE
    ChangeStateDevice:
      description: Device's capability
      type: object
      allOf:
        - $ref: '#/components/schemas/ShortYandexDevice'
        - $ref: '#/components/schemas/YandexDeviceWithCapabilities'
      required:
        - id
        - capabilities
    ChangeStatesResponse:
      description: Response with changed states ofdevices
      type: object
      allOf:
        - $ref: '#/components/schemas/UnlinkResponse'
      properties:
        payload:
          $ref: '#/components/schemas/ChangeStatesResponsePayload'
    SmartThingsRequest:
      description: Request from SmartThings
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/Headers'
        authentication:
          $ref: '#/components/schemas/Authentication'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/SmartThingsDevice'
      required:
        - headers
        - authentication
    SmartThingsResponse:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/Headers'
        requestGrantCallbackAccess:
          type: boolean
          example: true
        devices:
          type: array
          items:
            $ref: '#/components/schemas/SmartThingsDevice'
        deviceState:
          type: array
          items:
            $ref: '#/components/schemas/DeviceState'
    SmartThingsDevice:
      type: object
      properties:
        externalDeviceId:
          type: string
          example: pdevice-1
        deviceCookie:
          $ref: '#/components/schemas/DeviceCookie'
        friendlyName:
          type: string
          example: Kitchen Bulb
        manufacturerInfo:
          $ref: '#/components/schemas/ManufacturerInfo'
        deviceContext:
          $ref: '#/components/schemas/DeviceContext'
        deviceHandlerType:
          type: string
          example: c2c-rgbw-color-bulb
        deviceUniqueId:
          type: string
          example: unique identifier of device
        commands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
    DeviceState:
      description: SmartThings device state
      type: object
      properties:
        externalDeviceId:
          type: string
          example: pdevice-1
        deviceCookie:
          $ref: '#/components/schemas/DeviceCookie'
        states:
          type: array
          items:
            $ref: '#/components/schemas/State'
    State:
      description: SmartThings device state
      type: object
      properties:
        component:
          type: string
          example: main
          default: main
        capability:
          type: string
          example: st.switch
        attribute:
          type: string
          example: switch
        value:
          type: object
          example: on
    Command:
      description: SmartThings command
      type: object
      properties:
        component:
          type: string
          example: main
          default: main
        capability:
          type: string
          example: st.switch
        command:
          type: string
          example: on
        arguments:
          type: array
          items:
            type: object
          example: []
    DeviceCookie:
      additionalProperties:
        type: object
      example: {"foo": 1, "bar": "two"}
    ManufacturerInfo:
      type: object
      properties:
        manufacturerName:
          type: string
          example: LIFX
        modelName:
          type: string
          example: A19 Color Bulb
        hwVersion:
          type: string
          example: v1 US bulb
        swVersion:
          type: string
          example: 23.123.231
    DeviceContext:
      type: object
      properties:
        roomName:
          type: string
          example: Kitchen
        groups:
          type: array
          items:
            type: string
          example:
            - Kitchen Lights
            - House Bulbs
        categories:
          type: array
          items:
            type: string
          example:
            - light
            - switch
    Headers:
      type: object
      properties:
        schema:
          type: string
          example: st-schema
          default: st-schema
        version:
          type: string
          example: 1.0
          default: 1.0
        #TODO: Enum?
        interactionType:
          type: string
          example: discoveryRequest
        requestId:
          type: string
          example: abc-123-456
      required:
        - schema
        - version
        - interactionType
        - requestId
    Authentication:
      description: "asdasdas"
      type: object
      properties:
        tokenType:
          type: string
          example: Bearer
        token:
          type: string
          example: token received during oauth from partner
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      example: "12345"
      schema:
        type: string
    requestId:
      name: X-Request-Id
      in: header
      required: true
      example: 62376c99-5a12-41a9-9599-0866e3bd7b98
      schema:
        type: string
  examples:
    discoveryRequest:
      value:
        headers:
          schema: st-schema
          version: 1
          interactionType: discoveryRequest
          requestId: abc-123-456
        authentication:
          tokenType: Bearer
          token: token received during oauth from partner
    stateRefreshRequest:
      value:
        headers:
          schema: st-schema
          version: 1
          interactionType: stateRefreshRequest
          requestId: abc-123-456
        authentication:
          tokenType: Bearer
          token: token received during oauth from partner
        devices:
          - externalDeviceId: partner-device-id-1
          - externalDeviceId: partner-device-id-2
    commandRequest:
      value:
        headers:
          schema: st-schema
          version: 1
          interactionType: commandRequest
          requestId: abc-123-456
        authentication:
          tokenType: Bearer
          token: token received during oauth from partner
        devices:
          - externalDeviceId: partner-device-id-1
            deviceCookie:
              lastcookie: cookie value
            commands:
              - component: main
                capability: st.switch
                command: on
                arguments: []
